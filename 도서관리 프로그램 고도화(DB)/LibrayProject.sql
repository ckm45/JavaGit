DROP TABLE LOAN;
DROP TABLE MEMBER;
DROP TABLE BOOK;
DROP TABLE BACKUP_MEMBER;
DROP TABLE BACKUP_BOOK;
REM ********************************************************************
REM 수정사항
REM 23/04/15 DROP TABLE 순서 MEMBER, BOOK , LOAN -> LOAN, MEMBER, BOOK
REM 23/04/15 나이계산 BETWEEN SYSDATE에서 트리거로 변경
REM 23/04/18 LoanID sequence로 변경
REM 23/04/18 모든 테이블 ID SEQ적용 DEFAULT

REM ********************************************************************

    
DROP SEQUENCE MEMBER_SEQ;
CREATE SEQUENCE MEMBER_SEQ
  START WITH 1
  INCREMENT BY 1
  MINVALUE 1
  MAXVALUE 99999999
  NOCYCLE;

CREATE TABLE MEMBER(
    ID          VARCHAR2(20)     DEFAULT LPAD(MEMBER_SEQ.NEXTVAL,3,'0') CONSTRAINT MEMBER_ID_PK PRIMARY KEY,
    NAME        VARCHAR2(20)    NOT NULL,
    BIRTHDAY    DATE            NOT NULL,
    ADDRESS     VARCHAR2(50)    NOT NULL,
    PHONENUMBER VARCHAR2(15)    CONSTRAINT MEMBER_UK UNIQUE,
    STARTDATE   DATE            DEFAULT SYSDATE,
    AGE         NUMBER
);

--CREATE TABLE MEMBER(
--    ID          VARCHAR2(8)     DEFAULT LPAD(MEMBER_SEQ.NEXTVAL,3,'0'), CONSTRAINT MEMBER_ID_PK PRIMARY KEY,
--    NAME        VARCHAR2(20)    NOT NULL,
--    BIRTHDAY    DATE            NOT NULL,
--    ADDRESS     VARCHAR2(50)    NOT NULL,
--    PHONENUMBER VARCHAR2(15)    CONSTRAINT MEMBER_UK UNIQUE,
--    STARTDATE   DATE            DEFAULT SYSDATE,
--    AGE         NUMBER
--    );


    
CREATE TABLE BOOK(
    BOOKID       VARCHAR2(20)     DEFAULT LPAD(BOOK_SEQ.NEXTVAL,3,'0') CONSTRAINT BOOK_ID_PK PRIMARY KEY,
    BOOKNAME     VARCHAR2(20)     NOT NULL,
    PUBLISHDATE  DATE            NOT NULL,
    STATUS       CHAR(1)         NOT NULL,CONSTRAINT STATUS_CK CHECK (STATUS IN ('T','F'))
    );
DROP SEQUENCE BOOK_SEQ;
CREATE SEQUENCE BOOK_SEQ
  START WITH 1
  INCREMENT BY 1
  MINVALUE 1
  MAXVALUE 99999999
  NOCYCLE;



CREATE TABLE LOAN(
    LOANID                    VARCHAR2(20)     DEFAULT LPAD(LOAN_SEQ.NEXTVAL,3,'0') CONSTRAINT LOAN_ID_PK PRIMARY KEY,
    MEMBERID                  VARCHAR2(20)     NOT NULL, CONSTRAINT LOAN_MEMBER_FK FOREIGN KEY(MEMBERID) 
                                                REFERENCES MEMBER(ID),
    BOOKID                    VARCHAR2(20)     NOT NULL, CONSTRAINT LOAN_BOOK_FK FOREIGN KEY(BOOKID)
                                                REFERENCES BOOK(BOOKID),
    LOANDATE                  DATE            DEFAULT SYSDATE,
    RETURNDATE                DATE            DEFAULT SYSDATE + 14,
    EXTENSIONAVAILABLE        CHAR(1)         NOT NULL, CONSTRAINT EXTENSION_CK 
                                                        CHECK(EXTENSIONAVAILABLE IN ('T','F'))

    );     
    
    
DROP SEQUENCE LOAN_SEQ;
CREATE SEQUENCE LOAN_SEQ
  START WITH 1
  INCREMENT BY 1
  MINVALUE 1
  MAXVALUE 99999999
  NOCYCLE;

-- 생일을 기반으로 나이를 계산
CREATE OR REPLACE TRIGGER CALC_AGE
BEFORE INSERT OR UPDATE ON MEMBER
FOR EACH ROW
BEGIN
    :NEW.AGE := TRUNC(MONTHS_BETWEEN(SYSDATE, :NEW.BIRTHDAY) / 12);
END;
--UPDATE MEMBER SET AGE=TRUNC(MONTHS_BETWEEN(SYSDATE,BIRTHDAY)/12);
/

CREATE TABLE BACKUP_MEMBER(
    ID          VARCHAR2(8)     CONSTRAINT BACKUP_MEMBER_ID_PK PRIMARY KEY,
    NAME        VARCHAR2(20)    NOT NULL,
    BIRTHDAY    DATE            NOT NULL,
    ADDRESS     VARCHAR2(50)    NOT NULL,
    PHONENUMBER VARCHAR2(15)    CONSTRAINT BACKUP_MEMBER_UK UNIQUE,
    STARTDATE   DATE            DEFAULT SYSDATE,
    AGE         NUMBER
    );
    
CREATE TABLE BACKUP_BOOK(
    BOOKID       VARCHAR2(8)      CONSTRAINT BACKUP_BOOK_ID_PK PRIMARY KEY,
    BOOKNAME     VARCHAR2(20)     NOT NULL,
    PUBLISHDATE  DATE            NOT NULL,
    STATUS       CHAR(1)         NOT NULL,CONSTRAINT BACUP_STATUS_CK CHECK (STATUS IN ('T','F'))
    );
    
